#!/bin/bash

IMAGE=hashicorp/vault
IMAGE_TAG=0.9.3
VAULT_CONF=/etc/environment

cat "$VAULT_CONF" | grep VAULT_IMAGE > /dev/null 2>&1
if [[ "$?" == 1 ]];then
    sudo /bin/bash -c "echo VAULT_IMAGE=${IMAGE}:${IMAGE_TAG} >> ${VAULT_CONF}"
fi

get_help(){
    echo "Usage:"
    printf "\t config\t: Provide Vault container version (e.g. vault config 0.9.9) to override default 'latest'.\n"
    printf "\t --help\t: Show help from Vault container.\n"
    printf "\t help\t: Show this help.\n"
    printf "\t shell\t: Open a shell in the Vault container.\n"
    printf "\t * \t: Run Vault container if no input passed to 'vault'.\n"
    exit 0
}

# param $1 - Image tag
configure_image_version(){
    VAULT_IMAGE_GIVEN_TAG=$1
    if [[ -z "$VAULT_IMAGE_GIVEN_TAG" ]];then
        printf "ERROR: Provide a target Vault version (e.g. 0.9.9, latest, etc.) to override the default 'latest' version.\n"
        exit 1
    else
        CUR_TAG=$(cat "$VAULT_CONF" | grep VAULT_IMAGE | cut -d ":" -f2)
        sudo sed -i -e "s/${CUR_TAG}/${VAULT_IMAGE_GIVEN_TAG}/g" "$VAULT_CONF"
    fi
    VAULT_IMAGE=$(vault version)
    printf "Currently configured image tag is: ${VAULT_IMAGE}.\n"
}

setup_vault(){
    INSTALL_DIR=$1
    type vault > /dev/null 2>&1
    if [[ "$?" == "1" ]]; then
        printf '%s\n' 'Installing Vault...'
        sudo /bin/cp /workspace/provisioner/vagrant/bin/vault "$INSTALL_DIR"
    fi
}

setup_consul(){
    INSTALL_DIR=$1
    type consul > /dev/null 2>&1
    if [[ "$?" == "1" ]]; then
        printf '%s\n' 'Installing Consul...'
        sudo /bin/cp /workspace/provisioner/vagrant/bin/consul "$INSTALL_DIR"
    fi
}

COMMAND=$1
if [[ -z "$COMMAND" ]]; then
    get_help
fi

case "$COMMAND" in
    config)
        USER_INPUT_PARAM_2=$2
        configure_image_version "$USER_INPUT_PARAM_2"
        ;;
    help)
        get_help
        ;;
    *)
        sudo docker exec \
            vault \
            vault "${@:1}"
        ;;
esac
